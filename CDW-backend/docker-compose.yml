name: shoes-container
services:
  mysql:
    image: debezium/example-mysql:2.7.3.Final
    container_name: shoes-mysql
    hostname: mysql
    ports:
      - '3306:3306'
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
      MYSQL_ROOT_PASSWORD: ""
    volumes:
      - shoes_mysql_data:/var/lib/mysql
    networks:
      - shoes-network

  elasticsearch:
    image: elasticsearch:8.2.3
    container_name: shoes-elasticsearch
    ports:
      - "9200:9200"
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ELASTIC_PASSWORD=elasticsearch
      - ES_JAVA_OPTS=-Xmx500m -Xms500m
    volumes:
      - shoes_elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - shoes-network

  kafka:
    image: 'bitnami/kafka:3.7.0'
    container_name: shoes-kafka
    hostname: shoes-kafka
    ports:
      - '9094:9094'
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
    networks:
      - shoes-network

  kafka-ui:
    container_name: shoes-kafka-ui
    image: provectuslabs/kafka-ui:v0.7.2
    ports:
      - '9095:8080' # Mặc định Kafka UI chạy trên cổng 8080 trong container
    environment:
      - DYNAMIC_CONFIG_ENABLED=true
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=shoes-kafka:9092 # Điểm kết nối Kafka broker
    depends_on:
      - kafka
    networks:
      - shoes-network

  debezium:
    image: debezium/connect:2.7.3.Final
    container_name: shoes-debezium
    environment:
      - BOOTSTRAP_SERVERS=shoes-kafka:9092
      - GROUP_ID=1
      - CONFIG_STORAGE_TOPIC=debezium_connect_configs
      - OFFSET_STORAGE_TOPIC=debezium_connect_offsets
      - STATUS_STORAGE_TOPIC=debezium_connect_statuses
      - CONNECT_TIMEOUT_MS=60000
    ports:
      - "8083:8083"
    depends_on:
      - kafka
      - mysql
    networks:
      - shoes-network

  redis-stack:
    image: redis/redis-stack:7.4.0-v0
    container_name: shoes-redis-stack
    ports:
      - "6379:6379"  # Redis default port
      - "8001:8001"  # RedisInsight default port
    environment:
      - REDIS_PASSWORD=root
    volumes:
      - shoes_redis_data:/data
    networks:
      - shoes-network

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: cdw-backend
    ports:
      - "9000:9000"
    volumes:
      - ./src/main/resources/application.properties:/app/src/main/resources/application.properties
    depends_on:
      - mysql
      - elasticsearch
      - kafka
      - redis-stack
    networks:
      - shoes-network

  frontend:
    build:
      context: ../CDW-frontend
      dockerfile: Dockerfile
    container_name: cdw-frontend
    ports:
      - "5173:5173"
    volumes:
      - ../CDW-frontend/src:/app/src
      - ../CDW-frontend/public:/app/public
    environment:
      - NODE_ENV=development
    restart: unless-stopped
    networks:
      - shoes-network
    command: npm run production
    depends_on:
      - backend
      - debezium
      - redis-stack

volumes:
  shoes_mysql_data:
  shoes_elasticsearch_data:
  shoes_redis_data:
networks:
  shoes-network:
    driver: bridge